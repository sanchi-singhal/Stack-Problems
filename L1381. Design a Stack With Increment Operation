1381. Design a Stack With Increment Operation


https://leetcode.com/problems/design-a-stack-with-increment-operation/description/


1. using for loops


class CustomStack:

    def __init__(self, maxSize: int):
        self.l=[]
        self.a=[]
        self.m=maxSize
    
    def popa(self):
        if(len(self.a)>0):
            self.l.pop()
    
    def pusha(self,el):
        self.a.append(el)
        
        

    def push(self, x: int) -> None:
        if(len(self.l)<self.m):
            self.l.append(x)
        

    def pop(self) -> int:
        if(len(self.l)==0):
            return -1
        else:
            return self.l.pop()
        

    def increment(self, k: int, val: int) -> None:
        if(len(self.l)<k):
            for i in range(len(self.l)):
                self.l[i]+=val
        else:
            for i in range(k):
                self.l[i]+=val
                
                
                
 alternative:
 
 
  for i in range(min(k, self.top + 1)): self.arr[i] += val
  
  
  2. using two stacks for increment operation
